[Music] [Music] what's up guys this is Ronnie welcome back to our Channel Total technology Zone this is tutorial 58 and today I'll be going to do a very unique tutorial and from the name itself it is clear that I'll be going to develop or I'll be going to teach you how to create a conditional rack using Lang chain and openi when I say conditional rack obviously there is some some twist okay so let me explain that so we all know rag means we are going to use some sort of context right mean suppose we have a text file or multiple text file or we have multiple PDF file based on that PDF file first we'll load the file then we'll do splitting chunking and then we'll store theming inside a vector DV and then once the vector DV is ready if a user is asking something first uh basically it will get some similar document from the uh from the uh from the vector database or embedding vector embeddings and after that it will uh actually uh find out the most relevant answer out of that right so that is the ultimate thing now suppose you created a rag and some information is actually not available in the rag so basically that time your uh your your rag is actually going to reply that sorry unfortunately there is no matching document or something like that right so just to avoid that situation I I was actually thinking because it was a requirement from one of my client that if some information is not available in the rack try to actually use some other like repository or or data source like for us other repository or data source will be like kind of a search engine whether it's a Google search engine or D du so basically I'll try to show you how to create a rag with a condition if the information is not available within the context uh it will actually go and search from the Google search and try to give you the answer okay so let's try to do that okay so let me show you the steps load PDF document complete the chunking store the embedding into Vector DV the three very simple steps then build and test act like the classical uh like testing and create a condition in case user question is not available in the context search uh search uh actually from the internet okay so there I'll be going to do a little bit of development I'll try to create a uh Google search agent using langen agent uh uh like module and after that we'll test the entire flow okay so without wasting much time let me start working on that so first thing first we'll be going to actually generate the vector DV okay so let me a little bit maximize this thing so I'll be going to use this PDF file so this is basically a document which talks about SQL injection a very simple document and first we'll ask some question from this document and then I'll test the scenario by asking some question which is not available in the document okay so let's start generate Vector DB okay so this thing and let's start so basically let me maximize this thing so the code will be very simple I believe I did multiple uh time okay so I'll try to do that okay let's see just scroll down okay just okay okay I just uh put my like laptop and charger okay so let's start working on the documentation maybe so hold down yes okay so from Lang okay first I think we need to import we going to uh because I'll be going to use the directory uh like this PDF so I'll be going to import the module OS right the next modum will be document loader so basically from Lang chain okay so from Lang chain dot len. document loaders import uh what is uh what I'll be going to inut it will be Pi Pi PDF loader okay so Pi PDF loer okay so done then probably will'll be going to import the uh recursive character text splitter so basically from Lang chain. text splitter import uh recursive character text splitter done so next two things will be embeddings and Vector store okay so from length chain open AI import uh open Ai embeddings and last thing will be Vector store so basically from Lang chain do Vector stores import import chroma right okay I don't know why Always it is like becoming small I actually I did okay done everything is done now let's start uh like creating the chunk so first thing first we'll be going to create a function da uh like uh gen gen gen DV right generate DV or something so basically it is going to uh give something like this like it is going to be a chroma right chroma okay okay fine all done now we'll be going to create a folder so basically folder equals to I think folder equals to OS do get CWD current working directory that is my current working folder and I'll be going to create a list this code is actually going to work for multiple documents I'll be going to give you guys a generic code right documents right so now what we'll be going to do for for [Music] file in okay so o. list directory and basically inside that I'll just going to put folder this variable folder right so basically it will check then now I'll be going to check if any file any file file okay dot ends with means the string ends with what uh like. PDF right then we'll be going to load that document so basically uh Lo first we'll be going to just print the path or file like if this condition is true then we'll be going to create a variable called loader equals to uh P PDF loader right and we'll be going to put the file here right so basically the file ends with this then probably um just thinking so basically I need to get the full path I believe right so basically I need to get the full path so what I'm saying uh uh PDF part this is the PDF part so basically we file uh in OS do list directory folder path and if file ends with this then basically um okay so basically just hold on I'm just thinking I did a mistake here so basically PDF file okay so basically now we have to actually create the PDF file but race. path right path. join do join right now you have to join it using what using actually uh this folder and this file will be joined right so basically this folder will be joined with the file right and after that I'll be just going to print this PDF file and here I'll be going to load this PDF file right that's it everything is done now we'll be going to actually the loader is ready now I'll be going to actually extend documents. extend and inside that I'll be just going to put loaded. load okay loader do load okay that's it everything is done right so let's see whether I'm able to do get anything or not from this documents and then we'll be going to do so basically uh okay so basically okay just print it okay let's print this thing documents let's see how it is actually going to give so let's print the document so basically I'll print the document outside of the list outside of the for Loop right and after that what we'll do I'll be just going to run this thing gen DV okay let's see whether everything is working fine or not and I'm getting something or not I think it is returning something here see it is returning the PDF yeah so everything is fine I'm able to load the PDF with this thing so now what will happen just remove this part now you have to actually using the splitting I mean the chunking and after that we'll be going to store this thing okay right so at the end of the for Loop we'll be going to create a text text splitter ISP okay let's create a text splitter so will be the cursive character tet and there I'll be going to set the Chun size and everything so C chunk size so I'll be going to give a very small size chunk size let's say thand okay and chunk overlap let's say 10 chunk overlap uh let's say 10 chunk overlap is 10 now I'll be going to chunk the document right so basically CD the chunk documents basically it should be recur text sper so B basically text splitter and inside that we'll be going to write do split documents right split documents and what exactly I'll be going to uh uh put so basically um this documents right this document right everything is done okay so now we'll be going to create an instance of vector DB Vector DB so Vector DB is actually coming from this chroma right chroma from document chro chroma from from uncore docment right done so basically what should be my documents so basically documents will be CD the chunk documents right I have to mention embeddings so basically m d d d i n gs MB okay it will be embedding only Mings to open open AI embeddings right all done and the last thing I want to save this thing as a persistent directory so I'll be going to give a name like let's say persist directory so let's say persist s s s s and directory okay directory so basically OS do get current working directory like this okay then plus right and this this okay and I'm just going to give a name Vector Index right so it is created and at the end so what it'll be going to do Vector DV do persist uh sorry will be persist or something like that I don't know why it is not coming so let's see like this okay and we have to um I think it is done no need to return return anything first we just going to uh create this thing okay okay so what is going to happen now let's see right now I have no Vector database here see if I execute the code I'll be going to see something with Vector index here okay so let's see so I have to actually get this thing okay let's execute this so it is done working it is still working and it's completed no error and you see here Vector index is created and if you see something is there okay so part one is completed so basically part one means it's actually uh my this thing up to this part everything is done okay we'll be going to complete the build and test the rack so the fourth step okay so for that just now no need to do anything so let's go to the main code okay so that is our main code okay so okay all right so let's start the next part that is the building of the rag actually okay so let me maximize this thing a little bit okay so let's start working on it okay so first thing first so from L chain _ Community Vector stores so basically Vector stores we'll be going to import chroma right okay so import CH R okay done so then we'll be going to import the embeddings so let say from lank chain underscore open so basically import open edings and after that we'll be going to actually import um so chat open here right all done so llm is done chroma is done so basically uh next thing is actually be going to uh import an llm chain and prompt template okay so from length chain uh do chains okay import so basically uh llm chain right so I don't know why this is not coming llm ch right next thing we'll be going to import a prompt template from blank chain doc blank chain do promts so basically it will be prom template okay so in put prom template done so prom template is done what else is required I think um we'll be actually requiring the stream lead that's it so basically import import stream lead okay okay so all done nothing is actually pending here right okay so all done all set okay so let's start working on our thing first thing we have to load the vector database okay so before uh okay so let's Vector databas is actually or maybe just s. title so for our streamate application I want to actually give a name so basically uh talk with the rag okay just a fancy name okay that's is done uh next thing is actually sp. WR okay there I'll be going to right actually ask anything and get answer okay that's it so then Vector DV okay now the vector DV so Vector DV is tells to actually chroma okay so we'll be going to actually mention persist SI purs directory so what will be my purs directory so basically I have to import o right so basically the same thing like whatever we actually mention here so I'll be going to give the same thing here okay so that is my persistent directory okay just copy and paste okay okay then and we have to mention an embedding function okay so embedding function so ming underscore function okay if you embedding function equals to open a embedding and like this okay all things are done right right now what is actually going to happen from template so basically let's create a promt template so basically I'll be just going to write promore template okay so prompt template I already create a prom template because don't want to waste some time so basically rack prompt so you are an intelligent cyber security assistant assis assistant who uh who has who has 10 years of experience and knowledge in SQL injection your task is to answer any question asked by user with the help of given context only nothing else context question answer if you don't find any information within the context just reply with n so basically what I do I just copy this thing okay and what I'll do I'll just paste it here so our context or whatever so promp is right now we'll be going to create an llm okay llm is actually going to be Chad open AI right so it'll be going to write model model equals to it will be in small okay again I'm doing the same thing so model equals to gp4 right turbo right done the next thing is actually what next thing is actually maxcore maxcore tokens let's say one24 right then then what else we'll be going to create a chain question answer CH Q chain equals to uh llm chain right so inside that what we'll be going to use we'll be going to llm equals to llm so like this so llm so llm equals to llm right it's done then prompt prom promt equals to prom template okay do prom template where is that prom template and what exactly we'll be going to pass we going to pass our prom template done so I think I can okay all done okay everything is done now question okay so we be going to ask a question to the user s. text area so ask your question here okay then so now we'll be going to start the condition okay so if if if this question basically uh so basically um I think uh there a little mistake so just hold on so basically I'm just thinking question equal to question so if uh I think uh it should be input or what I just don't know uh if the question is not know so maybe you can just write if question so if variable question equals to so basically I just change the name just to make a similarity or else I will get confused okay you can give any name is not okay then none okay then what will be going to happen so we'll be going to initiate an button submit button so basically St do button right St do button and the type will be submit okay the button type will be submit so basically this you be MIT submit all done right if button like this okay so just a variable Rd okay so Vector DV okay dot similarity search sore search so basically what will be search we'll be going to search based on this question like the user question and how many document I want to get written let's just going to written three documents okay all done so this is done now what we'll be going to do so we'll be going to create a context with a blank thing okay blank this thing and after that what we'll be going to do so we'll be going to write for D Rd right so document in relevant documents so d stands for document Rd stands for Relevant document and be going to write context context so basically context plus equals to uh d. page content okay so a little bit of like building the content actually and content okay so everything is done right so what will we going to do uh so what is this context plus equals to P content I don't know like why this is Contex equals to here what is this okay sorry okay there's a mistake okay so it is done now what we'll be going to do we'll be going to actually get a response from here response response equals to qn right to a chain. Ino okay and there what will be going to pass context equal to context so basically context this context this context equals to this variable context right and and this question this question question equals to this question user asked question so basically q u u s d i o n all done everything is fine right now what we'll do result equals to response do text right and after that what we do we just going to write st. WR the result okay okay result okay our the rag is ready so means this part is ready this part is ready the last two steps are pending so let's execute this thing now with the terminal let's say open a terminal so uh stream late run main.py right so done it's open right so we'll be going to ask a very simple question so let's go here and let's see what we can ask let's open the PDF Okay so okay so let's ask this question only see okay let's see SQL injection is a popular web application hacking method when an attacker finds the vulnerability so it's pretty much like actually coming from here so if you see it is actually coming from there now we'll be going to ask a question which is not available here right so let's say uh how to large scale injection so basically there is no information about this thing so let's see so it is saying na because here I mentioned if you don't find any information within the context just reply with n so now what happened now rag is kind of not working so here uh I want or maybe your client might be going to ask you to do some extra that at this moment it will go and search from the internet okay so we have to create an web agent right so for that I already do something here so web agent so I'll be going to use a Google search API like serer API okay so let's try to do that okay okay so let's start doing that so basically from uh Len chain okay L chain. agent right and import uh initialize agent so basically that initialize agent right and then uh agent type uh what is the agent type and maybe there is something called No tools all these things I did now what else so we'll be going to actually chat PR template and open AI this two things I have to actually import so basically from Lang chain and uh open right so [Music] import CH open AI right and from blank chain proms import import chat prom template right and let's import us module is always sometime is useful I don't know whether it will be useful here let's import that okay so first thing first yeah we have to set the environment variable because we'll be going to actually use the Google search API so w. environment variable so basically it should be Ser API key so basically serp serp okay API Sur API RP API underscore key Sur API _ apore key right this is the thing now what exactly I'll be going to put here so we'll be going to do it but before that there is create something called tools TOS tools equals to load tools and it should be this one so surf API tool so basically CPR serf API okay okay done so now how to get this Google Search API tool so basically you have to go to this Sur ai.com manage key and there you'll be going to get your key it's very easy just go to this link Sur ai.com it will give you this a Google search API okay so now we'll be going to put this thing here and don't worry I'll be going to delete this key after the use now we'll be going to create a template string okay T yes okay so now for that I also created something what is that web yeah web promt so you are an intelligent search Master and analyst who can search internet using surve API tool and analyze and generate the accurate Sir with required explanation take the input below delimited by so I just say that input will be coming and make sure to generate English and I said it will be explained and very simple so that the student can understand okay so what I'll do I'll just copy this entire thing okay and delete this thing okay so basically and basically okay all done everything is fine right right so agent is almost ready now what you'll be going to do we'll be going to create a prom template PT so basically chat prom template okay uh chat from template. from template so basically from template and there I'll be going to the template string okay all done template string is done right llm equals to then Chad open AI Chad open AI right and let's say model equals to GPT hen 4 hen turbo and then temperature right now agent agent equals to initialize agent so we'll be going to create the agent now so basically first thing tools agent is going to be use our tool tool is actually Google Search tool then I'll be going to put the llm right then there is something called Agent type agent underscore type then agent type so what is capital A is not coming I don't know agent type and then uh zero short react description so basically zero underscore Z underscore short sh short unders react so basically this one should be coming so let's copy this thing okay so it is done and then veros equals to true so veros okay v r v o s veros equals to True right okay so basically everything is done here okay now only thing we have to run the agent so basically what we'll do just going to create something called def run agent okay and it is going to be coming as an input done and what will be actually going to happen so basically we'll be going to write prompt PR prompt equals to PT this PT means this PT uh e uh e do format messages okay so format messages so basically input it is going to accept input and this input is actually going to come from the function like parameter input and after that we're just going to response basically response equals to like if equals to agent agent dot run and it should be prompt right then and they'll be going to return the response okay all done right okay so basically when my response is any that time I'll be going to do that okay so basically if result result equals to equals to na right that time I want to actually use that so that time what we'll be going to use uh very simple thing right so what is a simple thing okay just hold on so when the response equals to na that time I'll be going to use so basically agent result I'll be just going to create a variable agent okay agent underscore result right so agent result is actually going to what agent result is actually going to like run agent so run agent is actually going to come from from web agent import run agent right run agent run agent and it should be passed with the question user question so basically this question right then and after that what is actually going to happen so st. WR so basically Bally agent result so basically agent result done right if it is not that then probably I'm just going to write else okay else so in the else st. WR result right all done nothing is like if it is result when result is actually printed when result is any if result is say it is going to call that agent and agent code is actually written so basically it a piece of uh it has this this tutorial actually has a piece of three code like first we generate the DB this is a python file then we have a main file and from the main file we can call the this thing like web AG right combination of these three things a very detailed tutorial so hopefully you guys will like it so now what we will do everything is done agent is done now what will be going to do we we just going to ask the same question uh how to learn SQL injection okay like let see this time it should not give me so it is actually saying that uh cannnot import name run agent from we agent so basically some syntax error so let's say the here what is the mistake okay so from web agent import run agent so basically uh run agent so run A&T agent I have written the same thing and the wave underscore agent so basically wave underscore agent run agent so what is the problem here I don't know uh cannot import from agent so basically it is saying that uh okay so I don't know what is the problem here run agent cannot import name run agent from web agent user so basically the problem is actually in this code I did a very silly mistake let me think what I actually did uh okay so this is our main file so web agent so my file name is also here webcore agent okay webcore agent from web agent import run agent right and here only I call this run agent with a question and it is giving me this error so what I'll do let's execute this only this code so it has some error so basically embedding here actually the error so [Music] basically so basically here is the error so I can see the error so basically uh here chroma versus TV Vector embedding I think the error actually here uh embeding directory I think what it saying positional argument follows keyword argument so embedding function equals to open embedding so H so no error at such so let's see okay so remove this part and see what is happening okay so okay so basically what you do I just remove this part no need to do anything so just simply first run this code and see whether I'm getting something or not okay so basically how how to learn injection okay so let's do this thing okay okay okay na is coming up to this point there is no problem right so now what is do now we'll be going to import this thing so from web agent okay import web agent input so basically it says we have nothing called Web agent right wbore agent agent run agent Run Okay soore agent agent okay so let's see yeah so basically the problem the function object is not sub subscribable so basically uh this one the problem is actually here so uh in the web agent so basically it is saying U this is not subscribable so because of that this problem is coming so let's actually fix that error first okay so just hold on let me fix it one by one so one by one will fix everything so I as I told you I did a very like very silly mistake and because of that it's coming so basically it should be like this okay so now it will be working yeah so now next thing is actually cannot import name agent run from web agent so basically now what is the problem okay so what is the next problem we have to fix that problem okay uh web agent is a document tutorial 68 we agenty line number main.py line number six module import agent run so basically it is saying that um it is not able to actually import this thing right so I don't know what is the problem why it is not able to import this so let me remove this P first okay so now let's try this thing one more time yeah the same thing is actually here so let's import import so import okay let's do this thing okay okay it's fine working so now what you do we agent dot yeah now actually this is coming So So Def run agent yeah it is now working so we have to do in that way right so let's see let's ask this question here and don't I don't do anything I justun this thing yeah it's working so how to learn how to learn sare injection so I don't know what is the error there why is not coming so it should give me na obviously it will give me na yeah now it is giving giv me an error now what error it is coming uh completion temperature yes so because of that all the problems are coming I understand now so in the web agent I have a spelling mistake yeah temperature TMP R so basically because of the [Music] TMP okay so because of that all problem was coming right so nothing else okay fine all right so now what we'll be going to do now again we'll be going to execute the same thing hopefully this error will not come it is just going to give me an an that's it again it is giving me some syntax error yeah na is coming fine so now what we'll be going to do we'll be going to actually uh remove this part so basically uh agent we uh web agent underscore result equals to this okay so if result equals to equals to n so basically it should be result okay else uh s do right normal result okay let's do this thing it's doing something I don't know what it is doing okay yeah so here also it is giving me n so I need to change this to capital N okay okay so let's see Yeah so basically this is the right terminal so it you see it is actually searching from there okay okay Finish CH now it is giving me the answer from the internet okay right so let's ask something different is there is there any certification L for SQL injection okay let's see okay certifications for SQL injection it is searching in the Google right and okay so it's generated something let's see how much like intelligent answer it is actually going to generate it is giving some answers yes there are certific certification usually part of the Border cyber security courses like such as ECW University of col Council and Cy okay so now let's ask some question again from the book okay so let's go ahead and open the book and let's seeq injection dosq injection uh okay so how to check let's say this is requirement injection requirements let's see I hit enter I don't know what is happening okay okay so basically I think it came from the book so it will say vulnerable website do and everything okay so promising answer right okay all fine okay that's it I believe you guys are enjoying this series and I'm actually not going very fast I'm actually trying to give you guys each and uh every possible use case and aspect of drag okay so this a very simp simple tutorial but again it has a very very very like huge impact on uh on on on on Enterprise application driven like um system when you're actually doing the development for any AI driven application that time these sort of things are going to be very important right so with that note I'll be just going to conclude the video over here hopefully you guys will uh let me know the feedback uh in the comment description okay and last but not least I would like to request you guys if you are watching my video channel for the first time and if you really enjoying my videos and it is actually helping you please try to subscribe to my channel hit the like button try to share our videos with your family and friend and uh make sure you should not forget to hit the Bell notification so that you you should not miss any future video updates and try to subscribe to my channel because it's a very new channel and I try to actually grow okay and your help is only um your kind help only uh will help me to actually grow and I would like to grow very fast because our ultimate objective is actually to reach the large number of audience so please please please try to help me with u your support and help okay that's it guys we'll see you in the next video till then take care goodbye have a nice day happy landing and have a nice weekend